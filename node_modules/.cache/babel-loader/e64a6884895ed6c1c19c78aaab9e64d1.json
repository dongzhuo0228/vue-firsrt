{"remainingRequest":"C:\\idea_work_git\\11111111-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\idea_work_git\\11111111-vue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\idea_work_git\\11111111-vue\\src\\axios\\http.js","dependencies":[{"path":"C:\\idea_work_git\\11111111-vue\\src\\axios\\http.js","mtime":1559285031023},{"path":"C:\\idea_work_git\\11111111-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\idea_work_git\\11111111-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\idea_work_git\\11111111-vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { Message, Loading } from 'element-ui';\nimport router from \"./router\";\nvar loading;\n\nfunction startLoading() {\n  loading = Loading.service({\n    lock: true,\n    text: '拼命加载中...',\n    background: \"rgba(0,0,0,0,7)\"\n  });\n}\n\nfunction endLoading() {\n  loading.close();\n}\n\n; //请求拦截\n\naxios.interceptors.request.use(function (config) {\n  //加载动画\n  startLoading();\n\n  if (localStorage.eleToken) {\n    //设置统一请求头\n    config.headers.Authorization = localStorage.eleToken;\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); //响应拦截\n\naxios.interceptors.response.use(function (response) {\n  //结束加载动画\n  endLoading();\n  return response;\n}, function (error) {\n  //错误提醒\n  endLoading();\n  Message.error(error.response.data); //获取错误状态码\n\n  var status = error.response.status;\n\n  if (status == 401) {\n    Message.error(\"登录过期，请重新登录\"); //清除token\n\n    localStorage.removeItem('eleToken'); //跳转登录页面\n\n    router.push('/login');\n  }\n\n  return Promise.reject(error);\n});\nexport default axios;",{"version":3,"sources":["C:\\idea_work_git\\11111111-vue\\src\\axios\\http.js"],"names":["axios","Message","Loading","router","loading","startLoading","service","lock","text","background","endLoading","close","interceptors","request","use","config","localStorage","eleToken","headers","Authorization","error","Promise","reject","response","data","status","removeItem","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,YAAjC;AACA,OAAOC,MAAP;AAEA,IAAIC,OAAJ;;AACA,SAASC,YAAT,GAAwB;AACpBD,EAAAA,OAAO,GAAGF,OAAO,CAACI,OAAR,CAAgB;AACtBC,IAAAA,IAAI,EAAE,IADgB;AAEtBC,IAAAA,IAAI,EAAE,UAFgB;AAGtBC,IAAAA,UAAU,EAAE;AAHU,GAAhB,CAAV;AAKH;;AAED,SAASC,UAAT,GAAsB;AAClBN,EAAAA,OAAO,CAACO,KAAR;AACH;;AAAA,C,CAGD;;AACAX,KAAK,CAACY,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAAAC,MAAM,EAAI;AACrC;AACAV,EAAAA,YAAY;;AAEZ,MAAIW,YAAY,CAACC,QAAjB,EAA2B;AACvB;AACAF,IAAAA,MAAM,CAACG,OAAP,CAAeC,aAAf,GAA+BH,YAAY,CAACC,QAA5C;AACH;;AACD,SAAOF,MAAP;AACH,CATD,EASG,UAAAK,KAAK,EAAI;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAXD,E,CAaA;;AACApB,KAAK,CAACY,YAAN,CAAmBW,QAAnB,CAA4BT,GAA5B,CAAgC,UAAAS,QAAQ,EAAI;AACxC;AACAb,EAAAA,UAAU;AACV,SAAOa,QAAP;AACH,CAJD,EAIG,UAAAH,KAAK,EAAI;AACR;AACAV,EAAAA,UAAU;AACVT,EAAAA,OAAO,CAACmB,KAAR,CAAcA,KAAK,CAACG,QAAN,CAAeC,IAA7B,EAHQ,CAKR;;AALQ,MAMAC,MANA,GAMWL,KAAK,CAACG,QANjB,CAMAE,MANA;;AAOR,MAAIA,MAAM,IAAI,GAAd,EAAmB;AACfxB,IAAAA,OAAO,CAACmB,KAAR,CAAc,YAAd,EADe,CAEf;;AACAJ,IAAAA,YAAY,CAACU,UAAb,CAAwB,UAAxB,EAHe,CAIf;;AACAvB,IAAAA,MAAM,CAACwB,IAAP,CAAY,QAAZ;AACH;;AACD,SAAON,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAnBD;AAqBA,eAAepB,KAAf","sourcesContent":["import axios from 'axios';\r\nimport { Message, Loading } from 'element-ui';\r\nimport router from './router'\r\n\r\nlet loading;\r\nfunction startLoading() {\r\n    loading = Loading.service({\r\n        lock: true,\r\n        text: '拼命加载中...',\r\n        background: \"rgba(0,0,0,0,7)\"\r\n    });\r\n}\r\n\r\nfunction endLoading() {\r\n    loading.close();\r\n};\r\n\r\n\r\n//请求拦截\r\naxios.interceptors.request.use(config => {\r\n    //加载动画\r\n    startLoading();\r\n\r\n    if (localStorage.eleToken) {\r\n        //设置统一请求头\r\n        config.headers.Authorization = localStorage.eleToken;\r\n    }\r\n    return config;\r\n}, error => {\r\n    return Promise.reject(error)\r\n})\r\n\r\n//响应拦截\r\naxios.interceptors.response.use(response => {\r\n    //结束加载动画\r\n    endLoading();\r\n    return response;\r\n}, error => {\r\n    //错误提醒\r\n    endLoading();\r\n    Message.error(error.response.data);\r\n\r\n    //获取错误状态码\r\n    const { status } = error.response;\r\n    if (status == 401) {\r\n        Message.error(\"登录过期，请重新登录\");\r\n        //清除token\r\n        localStorage.removeItem('eleToken');\r\n        //跳转登录页面\r\n        router.push('/login')\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\nexport default axios"]}]}